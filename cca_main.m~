clear;
clc;
addpath('flann')

load('data/COIL20.mat');
nClass = length(unique(gnd));
newfea = NormalizeFea(fea);

result_L = [];
result_N = [];
result_X = [];
result_k = [];

rand('twister',1);

for a=1:10
    disp(['the ',num2str(a),' iteration']);
[label,center] = litekmeans(newfea,nClass,'Replicates',100);
[AC,MIhat] = Evaluate(label,gnd);
disp(['kmeans use all the features. MIhat: ',num2str(MIhat),'AC:  ',num2str(AC)]);

result_L = [result_L ; AC];
%[label,center] = kmeans(newfea,nClass,'Replicates',10);
end

rand('twister',1);

for a=1:10
[label, center] = hartigan(newfea,nClass,100);

[AC,MIhat] = Evaluate(label,gnd);
disp(['hartigan use all the features. MIhat: ',num2str(MIhat),'AC:  ',num2str(AC)]);

result_N = [result_N ; AC];

end

rand('twister',1);

for a=1:10
nitem = size(fea,1);

X = zeros(nitem,nitem);
knnsize = round(nitem/20);
%knnsize = 5;
params.algorithm = 'kdtree';
params.trees = 8;
params.cores = 4;
params.checks = 1024;

tic;

dic_ind = flann_search(newfea',newfea',knnsize,params);
for rows=1:nitem
    X (dic_ind(:,rows),rows) = 1;
end

toc;


[label, center] = hartigan(X',nClass,100);
[AC,MIhat] = Evaluate(label,gnd);
disp(['Sparse hartigan ',' MIhat: ',num2str(MIhat),'AC:  ',num2str(AC)]);
result_X = [result_X;AC];
end

mean(result_L)
mean(result_N)
mean(result_X)